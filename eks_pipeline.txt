pipeline {
    agent any
    environment {
        action = 'apply' // Change to 'destroy' if needed
    }
    stages {
        stage('Checkout from Git') {
            steps {
                git branch: 'master', url: 'https://github.com/Dewansh26/final_project.git'
            }
        }
        stage('Terraform version') {
            steps {
                sh 'terraform --version'
            }
        }
        stage('Terraform init') {
            steps {
                dir('Eks-terraform') {
                    // Attempt automatic migration, fallback to reconfiguration if needed
                    sh 'terraform init -migrate-state || terraform init -reconfigure'
                }
            }
        }
        stage('Terraform validate') {
            steps {
                dir('Eks-terraform') {
                    sh 'terraform validate'
                }
            }
        }
        stage('Terraform plan') {
            steps {
                dir('Eks-terraform') {
                    sh 'terraform plan'
                }
            }
        }
        stage('Terraform apply/destroy') {
            steps {
                dir('Eks-terraform') {
                    sh "terraform ${action} --auto-approve"
                }
            }
        }
    }
}
